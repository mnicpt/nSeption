/**
 * Handles cross-browser state handling of the history api and wraps existing
 * functionality.
 * 
 * author : Steve Mask (pk4y) 
 * version : 1.0 date : May 27, 2013
 * 
 */(function(e){var t=location.pathname.split("/")[2],n=localStorage.history!==undefined?JSON.parse(localStorage.history):null,r=function(){var e=new Array,r=location.pathname.split("/")[1];e.push(t);localStorage.history=JSON.stringify({pageFlow:e,contextRoot:r});n=JSON.parse(localStorage.history)};e(function(){if(n!==null){var e=location.pathname.split("/")[1];if(n.contextRoot!==e){localStorage.removeItem("history");r()}else n.pageFlow.indexOf(t)===-1&&n.pageFlow.push(t);localStorage.history=JSON.stringify(n)}else r()});return History={state:function(){return typeof history.state=="object"?history.state:{state:location.hash.substring(1)}},replaceState:function(e,t){typeof history.replaceState=="function"?history.replaceState(e,null,t):location.hash=e.state},pushState:function(e,t){typeof history.pushState=="function"?history.pushState(e,null,t):location.hash=e.state},back:function(){history.back()},forward:function(){history.forward()},go:function(e){history.go(e)},history:n,currentPage:t,previousPage:function(){var e=n.pageFlow.indexOf(this.currentPage),t=n.pageFlow[e-1];t===undefined&&(t=document.referrer.split("/")[4]);return t},nextPage:function(){try{var e=n.pageFlow.indexOf(this.currentPage),t=n.pageFlow[e+1];t===undefined&&(t="You are at the end of your flow.")}catch(r){t="You are at the end of your flow."}return t}}})(jQuery);